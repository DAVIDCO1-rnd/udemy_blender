#!/usr/bin/python3
#+
# This script generates an Open Shading Language shader that
# performs a scalar linear transformation of its input.
#
# Copyright 2018 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>.
# Licensed under CC-BY <http://creativecommons.org/licenses/by/4.0/>.
#-

import sys
import getopt

opts, args = getopt.getopt \
  (
    sys.argv[1:],
    "",
    ["default=", "name=", "type="]
  )
shader_name = None
op_type = None
default = None
for keyword, value in opts :
    if keyword == "--default" :
        default = value
    elif keyword == "--name" :
        shader_name = value
    elif keyword == "--type" :
        op_type = value
    #end if
#end for
if shader_name == None or op_type == None :
    raise getopt.GetoptError("missing --name or --type value")
#end if
if default == None :
    default = "0"
#end if
is_closure = op_type.startswith("closure")

arg_default = \
    (
        [
            "%(type)s(%(default)s)",
            "%(default)s",
        ][is_closure]
    %
        {"default" : default, "type" : op_type}
    )

sys.stdout.write \
  (
        "shader %(name)s\n"
        "  (\n"
        "    %(type)s Input = %(arg_default)s,\n"
        "    %(type)s Midpoint = %(arg_default)s,\n"
        "    float Scale = 1.0,\n"
        "    output %(type)s Output = %(arg_default)s\n"
        "  )\n"
        "  /* generated by osl-gen-rescale. */\n"
        "  {\n"
        "    Output = (Input - Midpoint) * Scale + Midpoint;\n"
        "  } /*%(name)s*/\n"
    %
        {
            "name" : shader_name,
            "type" : op_type,
            "arg_default" : arg_default,
        }
  )
